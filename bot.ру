python 






import os
import logging
import openai
import telebot
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω—ã –∏–∑ file.env
load_dotenv("file.env")

TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

openai.api_key = OPENAI_API_KEY
bot = telebot.TeleBot(TELEGRAM_TOKEN)

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ (–ø–æ –∂–µ–ª–∞–Ω–∏—é)
logging.basicConfig(level=logging.INFO)

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚Äî –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
main_menu = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
main_menu.row("üí¨ –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", "üìñ –ü–æ–º–æ—â—å")
main_menu.add("‚ùå –í—ã—Ö–æ–¥")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=["start"])
def send_welcome(message):
    bot.send_message(
        message.chat.id,
        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø ‚Äî –≤–∞—à Telegram-GPT-–ø–æ–º–æ—â–Ω–∏–∫. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=main_menu
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
@bot.message_handler(func=lambda message: True)
def handle_message(message):
    text = message.text.strip()

    if text == "üìñ –ü–æ–º–æ—â—å":
        bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏—Ç–µ –≤–æ–ø—Ä–æ—Å, –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–º–æ—á—å —Å –ø–æ–º–æ—â—å—é –ò–ò.")
    elif text == "‚ùå –í—ã—Ö–æ–¥":
        bot.send_message(message.chat.id, "–°–µ–∞–Ω—Å –∑–∞–≤–µ—Ä—à—ë–Ω. –î–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –≤–≤–µ–¥–∏—Ç–µ /start")
    elif text == "üí¨ –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å":
        bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å.")
    else:
        # GPT-–æ—Ç–≤–µ—Ç
        try:
            response = openai.ChatCompletion.create(
                model="gpt-3.5-turbo",
                messages=[
                    {"role": "system", "content": "–¢—ã ‚Äî –ø–æ–ª–µ–∑–Ω—ã–π Telegram-–±–æ—Ç, –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."},
                    {"role": "user", "content": text}
                ],
                temperature=0.7,
                max_tokens=500
            )
            answer = response["choices"][0]["message"]["content"]
            bot.send_message(message.chat.id, answer)
        except Exception as e:
            bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ OpenAI.")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling(non_stop=True)
